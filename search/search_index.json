{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Samples by Type \u00b6 Microsoft Teams is highly extensible, allowing 3rd party and custom applications to run alongside the many Office 365 services already included in Teams. Just as you can add a Word tab or the Who bot in Teams, you can write your own tabs and bots. You can also write applications that run outside the Teams UI and use the Microsoft Graph API to access and curate Teams content. This repository contains community samples that demonstrate different usage patterns for developing on Microsoft Teams as a platform. Samples are generally not production-ready, but are intended to show developers specific patterns and use cases for use in complete applications. To learn more about how to use these samples, please refer to our getting started section. All Apps Bots Messaging extensions Tabs JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 Python Console Echo Microsoft Modified December 19, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 HR Talent App Microsoft Modified April 13, 2020 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Consulting Bot Bob German Modified April 23, 2020 StateBot Bob German Modified August 12, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"By Type"},{"location":"#samples-by-type","text":"Microsoft Teams is highly extensible, allowing 3rd party and custom applications to run alongside the many Office 365 services already included in Teams. Just as you can add a Word tab or the Who bot in Teams, you can write your own tabs and bots. You can also write applications that run outside the Teams UI and use the Microsoft Graph API to access and curate Teams content. This repository contains community samples that demonstrate different usage patterns for developing on Microsoft Teams as a platform. Samples are generally not production-ready, but are intended to show developers specific patterns and use cases for use in complete applications. To learn more about how to use these samples, please refer to our getting started section. All Apps Bots Messaging extensions Tabs","title":"Samples by Type"},{"location":"metadataStructure/","text":"Metadata Structure \u00b6 There are too many variations in Teams samples to easily find them through simple navigation. The intention is for people to locate the sample they need through the Teams Sample Navigator This page describes the metadata that makes the Sample Navigator work. Each sample should be in its own folder with a README.md file that begins with the metadata in YAML format. Here is the entire YAML structure, with all the value options shown. Simply paste it to the top of your README.md file and delete the options that don't apply. --- page_type : sample products : - teams languages : - csharp - java - javascript - powerapps - powerautomate - python - typescript extensions : contentType : samples app_features : - Bot - Connector - Messaging Extension - Tab - Task Module technologies : - AngularJS - Angular - Bot Framework SDK v3 - Bot Framework SDK v4 - jQuery - Knockout - React - VueJS platforms : - ASP.NET Core MVC - Express - None - Restify - SPFx origin : - Community - Microsoft createdDate : 5/1/2019 12:00:00 AM --- Key to Metadata \u00b6 page_type \u00b6 In this repo, should always be \"sample\" products \u00b6 In this repo, should always be \"teams\" languages \u00b6 One or more languages may be used in solutions, including: csharp java javascript powerapps powerautomate python typescript extensions:contentType \u00b6 In this repo, should always be \"samples\" extensions:app_features \u00b6 One or more Teams application features included in the sample: Bot Connector Messaging Extension Tab Task Module extensions:technologies \u00b6 One or more frameworks or libraries used in the sample: AngularJS Angular Bot Framework SDK v3 Bot Framework SDK v4 React VueJS extensions:platforms \u00b6 One or more service platforms required by the solutions. This may include REST API service platforms, web server platforms, and hosted platforms like Power Apps, Power Automate, or SharePoint. ASP.NET Core MVC Express None PowerApps PowerAutomate Restify SPFx extensions:origin \u00b6 In the samples folder of this repo, should always be set to \"Community\" createdDate \u00b6 The date the sample was created, in US style m/d/yyyy hh:mm:ss AM/PM such as 5/1/2019 12:00:00 AM","title":"Metadata Structure"},{"location":"metadataStructure/#metadata-structure","text":"There are too many variations in Teams samples to easily find them through simple navigation. The intention is for people to locate the sample they need through the Teams Sample Navigator This page describes the metadata that makes the Sample Navigator work. Each sample should be in its own folder with a README.md file that begins with the metadata in YAML format. Here is the entire YAML structure, with all the value options shown. Simply paste it to the top of your README.md file and delete the options that don't apply. --- page_type : sample products : - teams languages : - csharp - java - javascript - powerapps - powerautomate - python - typescript extensions : contentType : samples app_features : - Bot - Connector - Messaging Extension - Tab - Task Module technologies : - AngularJS - Angular - Bot Framework SDK v3 - Bot Framework SDK v4 - jQuery - Knockout - React - VueJS platforms : - ASP.NET Core MVC - Express - None - Restify - SPFx origin : - Community - Microsoft createdDate : 5/1/2019 12:00:00 AM ---","title":"Metadata Structure"},{"location":"metadataStructure/#key-to-metadata","text":"","title":"Key to Metadata"},{"location":"metadataStructure/#page_type","text":"In this repo, should always be \"sample\"","title":"page_type"},{"location":"metadataStructure/#products","text":"In this repo, should always be \"teams\"","title":"products"},{"location":"metadataStructure/#languages","text":"One or more languages may be used in solutions, including: csharp java javascript powerapps powerautomate python typescript","title":"languages"},{"location":"metadataStructure/#extensionscontenttype","text":"In this repo, should always be \"samples\"","title":"extensions:contentType"},{"location":"metadataStructure/#extensionsapp_features","text":"One or more Teams application features included in the sample: Bot Connector Messaging Extension Tab Task Module","title":"extensions:app_features"},{"location":"metadataStructure/#extensionstechnologies","text":"One or more frameworks or libraries used in the sample: AngularJS Angular Bot Framework SDK v3 Bot Framework SDK v4 React VueJS","title":"extensions:technologies"},{"location":"metadataStructure/#extensionsplatforms","text":"One or more service platforms required by the solutions. This may include REST API service platforms, web server platforms, and hosted platforms like Power Apps, Power Automate, or SharePoint. ASP.NET Core MVC Express None PowerApps PowerAutomate Restify SPFx","title":"extensions:platforms"},{"location":"metadataStructure/#extensionsorigin","text":"In the samples folder of this repo, should always be set to \"Community\"","title":"extensions:origin"},{"location":"metadataStructure/#createddate","text":"The date the sample was created, in US style m/d/yyyy hh:mm:ss AM/PM such as 5/1/2019 12:00:00 AM","title":"createdDate"},{"location":"contributing/","text":"These samples are from the Microsoft 365 developer community. We welcome your samples and suggestions for new samples. Please have a look on our Contribution Guidance before submitting your pull requests, so that we can get your contribution processed as fast as possible. Thx.","title":"Contribution Guide"},{"location":"gettingstarted/","text":"Getting Started \u00b6 These samples were created by the PnP community. They demonstrate different usage patterns for the SharePoint Framework client-side web parts. The easiest way to get started with using these samples is to watch our video: All samples are stored in a GitHub repository . Each sample is located in its own folder with a README.md file that provides details about what it demonstrates and any extra information to help you get the most out of it. Using the samples \u00b6 To build and start using these projects, you'll need to clone and build the projects. Clone the pnp/teams-dev-samples repository by executing the following command in your console: git clone https://github.com/pnp/teams-dev-samples.git Navigate to the cloned repository folder which should be the same as the repository name: cd teams-dev-samples To access the samples use the following command, where you replace sample-folder-name with the name of the sample you want to access. cd samples cd sample-folder-name and for the tutorials, use the following command: cd tutorials Now run the following command to install the npm packages: npm install This will install the required npm packages and dependencies to build and run the client-side project. Once the npm packages are installed, run the following command to preview your web parts in SharePoint Workbench: gulp serve","title":"Using the Samples"},{"location":"gettingstarted/#getting-started","text":"These samples were created by the PnP community. They demonstrate different usage patterns for the SharePoint Framework client-side web parts. The easiest way to get started with using these samples is to watch our video: All samples are stored in a GitHub repository . Each sample is located in its own folder with a README.md file that provides details about what it demonstrates and any extra information to help you get the most out of it.","title":"Getting Started"},{"location":"gettingstarted/#using-the-samples","text":"To build and start using these projects, you'll need to clone and build the projects. Clone the pnp/teams-dev-samples repository by executing the following command in your console: git clone https://github.com/pnp/teams-dev-samples.git Navigate to the cloned repository folder which should be the same as the repository name: cd teams-dev-samples To access the samples use the following command, where you replace sample-folder-name with the name of the sample you want to access. cd samples cd sample-folder-name and for the tutorials, use the following command: cd tutorials Now run the following command to install the npm packages: npm install This will install the required npm packages and dependencies to build and run the client-side project. Once the npm packages are installed, run the following command to preview your web parts in SharePoint Workbench: gulp serve","title":"Using the samples"},{"location":"samples/all/","text":"All Samples \u00b6 To learn more about how to use these samples, please refer to our getting started section. Title Author Language Preview JavaScript ES6 Browser Echo Microsoft JavaScript ES6 Python Console Echo Microsoft Python Node.js Console Echo Microsoft TypeScript .NET Core Console Echo Microsoft .NET Core HR Talent App Microsoft .NET Core C# Teams Auth Bot Microsoft .NET Core Node.js Teams Auth Bot Microsoft TypeScript Consulting Bot Bob German .NET Core StateBot Bob German TypeScript Teams Tab - Field Visit Demo (Mashup) Bob German TypeScript","title":"All"},{"location":"samples/all/#all-samples","text":"To learn more about how to use these samples, please refer to our getting started section. Title Author Language Preview JavaScript ES6 Browser Echo Microsoft JavaScript ES6 Python Console Echo Microsoft Python Node.js Console Echo Microsoft TypeScript .NET Core Console Echo Microsoft .NET Core HR Talent App Microsoft .NET Core C# Teams Auth Bot Microsoft .NET Core Node.js Teams Auth Bot Microsoft TypeScript Consulting Bot Bob German .NET Core StateBot Bob German TypeScript Teams Tab - Field Visit Demo (Mashup) Bob German TypeScript","title":"All Samples"},{"location":"samples/allstatus/","text":"Samples with Status \u00b6 name Title Written by Language Modified Preview javascript_es6-browser-echo JavaScript ES6 Browser Echo Microsoft JavaScript ES6 July 19, 2019 pythonconsole-echo Python Console Echo Microsoft Python December 19, 2019 nodejsconsole-echo Node.js Console Echo Microsoft TypeScript May 2, 2019 cshapconsole-echo .NET Core Console Echo Microsoft .NET Core May 2, 2019 app-contoso-hr-talent-app HR Talent App Microsoft .NET Core April 13, 2020 bot-teams-auth-csharp C# Teams Auth Bot Microsoft .NET Core Jul 10, 2019 bot-teams-auth-nodejs Node.js Teams Auth Bot Microsoft TypeScript Jul 10, 2019 app-consulting-bot Consulting Bot Bob German .NET Core April 23, 2020 bot-statebot StateBot Bob German TypeScript August 12, 2019 tab-spfx-field-visit Teams Tab - Field Visit Demo (Mashup) Bob German TypeScript April 20, 2019 Count: 10","title":"Samples with Status"},{"location":"samples/allstatus/#samples-with-status","text":"name Title Written by Language Modified Preview javascript_es6-browser-echo JavaScript ES6 Browser Echo Microsoft JavaScript ES6 July 19, 2019 pythonconsole-echo Python Console Echo Microsoft Python December 19, 2019 nodejsconsole-echo Node.js Console Echo Microsoft TypeScript May 2, 2019 cshapconsole-echo .NET Core Console Echo Microsoft .NET Core May 2, 2019 app-contoso-hr-talent-app HR Talent App Microsoft .NET Core April 13, 2020 bot-teams-auth-csharp C# Teams Auth Bot Microsoft .NET Core Jul 10, 2019 bot-teams-auth-nodejs Node.js Teams Auth Bot Microsoft TypeScript Jul 10, 2019 app-consulting-bot Consulting Bot Bob German .NET Core April 23, 2020 bot-statebot StateBot Bob German TypeScript August 12, 2019 tab-spfx-field-visit Teams Tab - Field Visit Demo (Mashup) Bob German TypeScript April 20, 2019 Count: 10","title":"Samples with Status"},{"location":"samples/author/","text":"Samples by Author \u00b6 Our samples were created by the feature teams, SharePoint PnP core team (http://aka.ms/SharePointPnP) or shared by the community. Use the filter below to find samples by author. To learn more about how to use these samples, please refer to our getting started section. Consulting Bot Bob German Modified April 23, 2020 HR Talent App Microsoft Modified April 13, 2020 Python Console Echo Microsoft Modified December 19, 2019 StateBot Bob German Modified August 12, 2019 JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"By Author"},{"location":"samples/author/#samples-by-author","text":"Our samples were created by the feature teams, SharePoint PnP core team (http://aka.ms/SharePointPnP) or shared by the community. Use the filter below to find samples by author. To learn more about how to use these samples, please refer to our getting started section.","title":"Samples by Author"},{"location":"samples/compatibility/","text":"Samples by Compatibility \u00b6 All samples are compatible with SharePoint Online. If you wish to find web parts that were specifically designed for SharePoint 2019 or Microsoft Teams, use the filters below. To learn more about how to use these samples, please refer to our getting started section. All SharePoint Online SharePoint 2019 Microsoft Teams Consulting Bot Bob German Modified April 23, 2020 HR Talent App Microsoft Modified April 13, 2020 Python Console Echo Microsoft Modified December 19, 2019 StateBot Bob German Modified August 12, 2019 JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"Samples by Compatibility"},{"location":"samples/compatibility/#samples-by-compatibility","text":"All samples are compatible with SharePoint Online. If you wish to find web parts that were specifically designed for SharePoint 2019 or Microsoft Teams, use the filters below. To learn more about how to use these samples, please refer to our getting started section. All SharePoint Online SharePoint 2019 Microsoft Teams","title":"Samples by Compatibility"},{"location":"samples/images/","text":"All Images \u00b6 javascript_es6-browser-echo pythonconsole-echo nodejsconsole-echo cshapconsole-echo app-contoso-hr-talent-app bot-teams-auth-csharp bot-teams-auth-nodejs app-consulting-bot bot-statebot tab-spfx-field-visit","title":"All Images"},{"location":"samples/images/#all-images","text":"","title":"All Images"},{"location":"samples/keyword/","text":"Samples by Keyword \u00b6 Use the filter below to find samples by keywords in the title or description. To learn more about how to use these samples, please refer to our getting started section. Consulting Bot Bob German Modified April 23, 2020 HR Talent App Microsoft Modified April 13, 2020 Python Console Echo Microsoft Modified December 19, 2019 StateBot Bob German Modified August 12, 2019 JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"By Keyword"},{"location":"samples/keyword/#samples-by-keyword","text":"Use the filter below to find samples by keywords in the title or description. To learn more about how to use these samples, please refer to our getting started section.","title":"Samples by Keyword"},{"location":"samples/language/","text":"Samples by Language \u00b6 You can build Teams solutions using many of the programming languages you're already familiar with. Use the filters below to find samples by language. To learn more about how to use these samples, please refer to our getting started section. All .NET Core JavaScript .NET Web API JavaScript (ES6) TypeScript Python Consulting Bot Bob German Modified April 23, 2020 HR Talent App Microsoft Modified April 13, 2020 Python Console Echo Microsoft Modified December 19, 2019 StateBot Bob German Modified August 12, 2019 JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"By Language"},{"location":"samples/language/#samples-by-language","text":"You can build Teams solutions using many of the programming languages you're already familiar with. Use the filters below to find samples by language. To learn more about how to use these samples, please refer to our getting started section. All .NET Core JavaScript .NET Web API JavaScript (ES6) TypeScript Python","title":"Samples by Language"},{"location":"samples/spfx/","text":"Samples by SPFx Version \u00b6 All 1.10.0 1.9.1 1.9.0 1.8.2 1.8.1 1.8.0 1.7.1 1.7.0 1.6.0 1.5.1 1.4.1 1.4.0 1.3.4 1.3.0 GA Consulting Bot Bob German Modified April 23, 2020 HR Talent App Microsoft Modified April 13, 2020 Python Console Echo Microsoft Modified December 19, 2019 StateBot Bob German Modified August 12, 2019 JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"Samples by SPFx Version"},{"location":"samples/spfx/#samples-by-spfx-version","text":"All 1.10.0 1.9.1 1.9.0 1.8.2 1.8.1 1.8.0 1.7.1 1.7.0 1.6.0 1.5.1 1.4.1 1.4.0 1.3.4 1.3.0 GA","title":"Samples by SPFx Version"},{"location":"samples/status/","text":"Samples by Status \u00b6 As the SharePoint Framework evolves, some features are deprecated to make room for new ones, which may affect the working status of our samples. Use the filters to find samples by working status. If you encounter any issues with the samples, create an issue so that we can notify the original authors. All Working Deprecated Incomplete Other JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 Python Console Echo Microsoft Modified December 19, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 HR Talent App Microsoft Modified April 13, 2020 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Consulting Bot Bob German Modified April 23, 2020 StateBot Bob German Modified August 12, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"Samples by Status"},{"location":"samples/status/#samples-by-status","text":"As the SharePoint Framework evolves, some features are deprecated to make room for new ones, which may affect the working status of our samples. Use the filters to find samples by working status. If you encounter any issues with the samples, create an issue so that we can notify the original authors. All Working Deprecated Incomplete Other","title":"Samples by Status"},{"location":"samples/thumbs/","text":"All Images \u00b6 None None None None None None None https://github.com/pnp/teams-dev-samples/raw/master/samples/app-consulting-bot/assets/using-bot2-detail.png None https://github.com/pnp/teams-dev-samples/raw/master/samples/tab-spfx-field-visit/documentation/FieldVisitDemo.png </ul>","title":"All Images"},{"location":"samples/thumbs/#all-images","text":"","title":"All Images"},{"location":"samples/year/","text":"Samples by Year \u00b6 The SharePoint Framework is constantly evolving. Use the filters below to see how the samples have changed over the years. To learn more about how to use these samples, please refer to our getting started section. All 2020 2019 2018 2017 2016 Consulting Bot Bob German Modified April 23, 2020 HR Talent App Microsoft Modified April 13, 2020 Python Console Echo Microsoft Modified December 19, 2019 StateBot Bob German Modified August 12, 2019 JavaScript ES6 Browser Echo Microsoft Modified July 19, 2019 C# Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Teams Auth Bot Microsoft Modified Jul 10, 2019 Node.js Console Echo Microsoft Modified May 2, 2019 .NET Core Console Echo Microsoft Modified May 2, 2019 Teams Tab - Field Visit Demo (Mashup) Bob German Modified April 20, 2019","title":"By Year"},{"location":"samples/year/#samples-by-year","text":"The SharePoint Framework is constantly evolving. Use the filters below to see how the samples have changed over the years. To learn more about how to use these samples, please refer to our getting started section. All 2020 2019 2018 2017 2016","title":"Samples by Year"},{"location":"tutorials/","text":"Tutorials \u00b6 Tutorials around the SharePoint Framework client-side web parts to demonstrate different capabilities and possibilities on the framework. Each tutorial has it's own dedicated readme file to explain setup instructions and demonstrated capability. Since tutorials are build one-by-one to demonstrate the different capabilities, they are split with multiple folders demonstrating different stages of the tutorial progress. Getting started with client-side web parts Tutorial: Migrate jQuery and DataTables solution built using Script Editor Web Part to SharePoint Framework Tutorial: Migrate jQuery and FullCalendar solution built using Script Editor Web Part to SharePoint Framework Consuming APIs secured with Azure Active Directory within SharePoint Framework Build and run the tutorials \u00b6 To build and run this client-side project, you will need to clone and build the tutorials project. Clone this repo by executing the following command in your console: git clone https://github.com/SharePoint/teams-dev-samples.git Navigate to the cloned repo folder which should be the same as the repo name: cd teams-dev-samples Navigate to the tutorials folder: cd tutorials Navigate to the specific web part folder: cd 'subfolder' Now run the following command to install the npm packages: npm install This will install the required npm packages and depedencies to build and run the client-side project. Once the npm packages are installed, run the command to preview your web parts in SharePoint Workbench: gulp serve","title":"Tutorials"},{"location":"tutorials/#tutorials","text":"Tutorials around the SharePoint Framework client-side web parts to demonstrate different capabilities and possibilities on the framework. Each tutorial has it's own dedicated readme file to explain setup instructions and demonstrated capability. Since tutorials are build one-by-one to demonstrate the different capabilities, they are split with multiple folders demonstrating different stages of the tutorial progress. Getting started with client-side web parts Tutorial: Migrate jQuery and DataTables solution built using Script Editor Web Part to SharePoint Framework Tutorial: Migrate jQuery and FullCalendar solution built using Script Editor Web Part to SharePoint Framework Consuming APIs secured with Azure Active Directory within SharePoint Framework","title":"Tutorials"},{"location":"tutorials/#build-and-run-the-tutorials","text":"To build and run this client-side project, you will need to clone and build the tutorials project. Clone this repo by executing the following command in your console: git clone https://github.com/SharePoint/teams-dev-samples.git Navigate to the cloned repo folder which should be the same as the repo name: cd teams-dev-samples Navigate to the tutorials folder: cd tutorials Navigate to the specific web part folder: cd 'subfolder' Now run the following command to install the npm packages: npm install This will install the required npm packages and depedencies to build and run the client-side project. Once the npm packages are installed, run the command to preview your web parts in SharePoint Workbench: gulp serve","title":"Build and run the tutorials"},{"location":"tutorials/api-scopes/","text":"Consuming APIs secured with Azure Active Directory within SharePoint Framework \u00b6 Consuming REST APIs secured with Azure Active Directory (Azure AD) and Open Authorization (OAuth 2.0) from within a SharePoint Framework client-side web part or extension is a common enterprise-level business scenario. This tutorial will show how to create a SharePoint Framework solution that uses the Microsoft Graph API with a custom set of permissions. . You can find the detailed step-by-step instructions in the Consume the Microsoft Graph in the SharePoint Framework . The source code for this tutorial can be found on the GitHub repository .","title":"Consuming APIs secured with Azure Active Directory within SharePoint Framework"},{"location":"tutorials/api-scopes/#consuming-apis-secured-with-azure-active-directory-within-sharepoint-framework","text":"Consuming REST APIs secured with Azure Active Directory (Azure AD) and Open Authorization (OAuth 2.0) from within a SharePoint Framework client-side web part or extension is a common enterprise-level business scenario. This tutorial will show how to create a SharePoint Framework solution that uses the Microsoft Graph API with a custom set of permissions. . You can find the detailed step-by-step instructions in the Consume the Microsoft Graph in the SharePoint Framework . The source code for this tutorial can be found on the GitHub repository .","title":"Consuming APIs secured with Azure Active Directory within SharePoint Framework"},{"location":"tutorials/getting-started/","text":"Getting started with client-side web parts \u00b6 Summary \u00b6 This sub folders contains client-side projects includes the web parts detailed in the Getting Started walkthroughs. Technically these web parts could have remaind in one single solution, but to ensure that they match exactly what's in the tutorials, we have seperated them to dedicated solutions. Sub folders contains the following web parts: Solution Getting Started Walkthrough Video hello-world Build your first web part video hello-world-sp Connect your client-side web part to SharePoint video jquery-webpart Add jQueryUI Accordion to your SharePoint client-side web part video documentcardexample-webpart Use Office UI Fabric React components in your SharePoint client-side web part video asset-deployment-webpart Provision SharePoint assets from SharePoint Framework solutions TBD You can also view other SharePoint Framework related videos from SharePoint PnP YouTube Channel .","title":"Getting started with client-side web parts"},{"location":"tutorials/getting-started/#getting-started-with-client-side-web-parts","text":"","title":"Getting started with client-side web parts"},{"location":"tutorials/getting-started/#summary","text":"This sub folders contains client-side projects includes the web parts detailed in the Getting Started walkthroughs. Technically these web parts could have remaind in one single solution, but to ensure that they match exactly what's in the tutorials, we have seperated them to dedicated solutions. Sub folders contains the following web parts: Solution Getting Started Walkthrough Video hello-world Build your first web part video hello-world-sp Connect your client-side web part to SharePoint video jquery-webpart Add jQueryUI Accordion to your SharePoint client-side web part video documentcardexample-webpart Use Office UI Fabric React components in your SharePoint client-side web part video asset-deployment-webpart Provision SharePoint assets from SharePoint Framework solutions TBD You can also view other SharePoint Framework related videos from SharePoint PnP YouTube Channel .","title":"Summary"},{"location":"tutorials/migrate-datatables/","text":"Tutorial: Migrate jQuery and DataTables solution built using Script Editor Web Part to SharePoint Framework \u00b6 One of the frequently used jQuery plug-ins is DataTables . With DataTables, you can easily build powerful data overviews of data coming from both SharePoint and external APIs. This tutorial shows you how to convert a Script Editor web part built using jQuery and Datables to the SharePoint Framework. The source code for this tutorial can be found on the GitHub repository . The step-by-step guidance is available at https://dev.office.com/sharepoint/docs/spfx/web-parts/guidance/migrate-jquery-datatables-script-to-spfx . The tutorial is broken down into stages. You can find the source code for each stage, along with the step by step instructions below: Tutorial Stage Folder Migrate the IT requests overview solution from the Script Editor web part to the SharePoint Framework 01-migrated-sewp-to-spfx Add support for configuring the web part through web part properties 02-added-configuration Transform the plain JavaScript code to TypeScript 03-transformed-js-to-typescript","title":"Tutorial: Migrate jQuery and DataTables solution built using Script Editor Web Part to SharePoint Framework"},{"location":"tutorials/migrate-datatables/#tutorial-migrate-jquery-and-datatables-solution-built-using-script-editor-web-part-to-sharepoint-framework","text":"One of the frequently used jQuery plug-ins is DataTables . With DataTables, you can easily build powerful data overviews of data coming from both SharePoint and external APIs. This tutorial shows you how to convert a Script Editor web part built using jQuery and Datables to the SharePoint Framework. The source code for this tutorial can be found on the GitHub repository . The step-by-step guidance is available at https://dev.office.com/sharepoint/docs/spfx/web-parts/guidance/migrate-jquery-datatables-script-to-spfx . The tutorial is broken down into stages. You can find the source code for each stage, along with the step by step instructions below: Tutorial Stage Folder Migrate the IT requests overview solution from the Script Editor web part to the SharePoint Framework 01-migrated-sewp-to-spfx Add support for configuring the web part through web part properties 02-added-configuration Transform the plain JavaScript code to TypeScript 03-transformed-js-to-typescript","title":"Tutorial: Migrate jQuery and DataTables solution built using Script Editor Web Part to SharePoint Framework"},{"location":"tutorials/migrate-fullcalendar/","text":"Tutorial: Migrate jQuery and FullCalendar solution built using Script Editor Web Part to SharePoint Framework \u00b6 When building SharePoint solutions, SharePoint developers often use the FullCalendar jQuery plug-in to display data in calendar view. FullCalendar is a great alternative to the standard SharePoint calendar view, as it allows you to render as calendar data from multiple calendar lists, data from non-calendar lists, or even data from outside SharePoint. This article illustrates how you would migrate a SharePoint customization by using FullCalendar built with the Script Editor web part to the SharePoint Framework. This tutorial shows you how to convert a Script Editor web part built using jQuery and FullCalendar to the SharePoint Framework. The source code for this tutorial can be found on the GitHub repository . The step-by-step guidance is available at https://dev.office.com/sharepoint/docs/spfx/web-parts/guidance/migrate-jquery-datatables-script-to-spfx . The tutorial is broken down into the stages of the migration process. You can find the source code for a complete working solution that you can run in the browser for each stage, along with the step by step instructions below: Tutorial Stage Folder Migrate the IT requests overview solution from the Script Editor web part to the SharePoint Framework 01-migrated-sewp-to-spfx Add support for configuring the web part through web part properties 02-added-configuration Transform the plain JavaScript code to TypeScript 03-transformed-js-to-typescript Replace jQuery AJAX calls with SharePoint Framework API 04-replaced-jquery-ajax-with-spfx","title":"Tutorial: Migrate jQuery and FullCalendar solution built using Script Editor Web Part to SharePoint Framework"},{"location":"tutorials/migrate-fullcalendar/#tutorial-migrate-jquery-and-fullcalendar-solution-built-using-script-editor-web-part-to-sharepoint-framework","text":"When building SharePoint solutions, SharePoint developers often use the FullCalendar jQuery plug-in to display data in calendar view. FullCalendar is a great alternative to the standard SharePoint calendar view, as it allows you to render as calendar data from multiple calendar lists, data from non-calendar lists, or even data from outside SharePoint. This article illustrates how you would migrate a SharePoint customization by using FullCalendar built with the Script Editor web part to the SharePoint Framework. This tutorial shows you how to convert a Script Editor web part built using jQuery and FullCalendar to the SharePoint Framework. The source code for this tutorial can be found on the GitHub repository . The step-by-step guidance is available at https://dev.office.com/sharepoint/docs/spfx/web-parts/guidance/migrate-jquery-datatables-script-to-spfx . The tutorial is broken down into the stages of the migration process. You can find the source code for a complete working solution that you can run in the browser for each stage, along with the step by step instructions below: Tutorial Stage Folder Migrate the IT requests overview solution from the Script Editor web part to the SharePoint Framework 01-migrated-sewp-to-spfx Add support for configuring the web part through web part properties 02-added-configuration Transform the plain JavaScript code to TypeScript 03-transformed-js-to-typescript Replace jQuery AJAX calls with SharePoint Framework API 04-replaced-jquery-ajax-with-spfx","title":"Tutorial: Migrate jQuery and FullCalendar solution built using Script Editor Web Part to SharePoint Framework"}]}